{"version":3,"sources":["../../node_modules/@angular/core/@angular lazy","../../src lazy","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/api.service.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,kC;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;AC9B2E;AAElC;AAEzC,yGAAsB,EAAE,CAAC,eAAe,CAAC,8DAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;ACJT;AACY;AACG;AACe;AACjC;AAEa;AACM;AAEJ;AACH;AAgCpD,IAAa,SAAS;IAAtB;IAAwB,CAAC;IAAD,gBAAC;AAAD,CAAC;AAAZ,SAAS;IA9BrB,uEAAQ,CAAC;QACN,YAAY,EAAE;YACX,6DAAK;SACP;QACD,OAAO,EAAE;YACX,gFAAa;YACb,iEAAU;YACJ,0EAAkB,CAAC,OAAO,EAAE;YAC7B,kEAAW,CAAC,OAAO,CAAC,6DAAK,EAAE,EAAE,EACpC;gBACE,KAAK,EAAE;oBACL,EAAE,YAAY,EAAE,6CAA6C,EAAE,IAAI,EAAE,WAAW,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBACzI,EAAE,YAAY,EAAE,mDAAmD,EAAE,IAAI,EAAE,aAAa,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBACnJ,EAAE,YAAY,EAAE,0CAA0C,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;oBACpI,EAAE,YAAY,EAAE,0CAA0C,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,cAAc,EAAE,EAAE,EAAE;iBACrI;aACF,CAAC;SACG;QACD,SAAS,EAAE,CAAC,+DAAQ,CAAC;QACrB,eAAe,EAAE;YAChB,6DAAK;SACL;QACD,SAAS,EAAE;YACR,2EAAS;YACT,iFAAY;YACjB,EAAC,OAAO,EAAE,mEAAY,EAAE,QAAQ,EAAE,wEAAiB,EAAC;YAC9C,2EAAW;SACd;KACJ,CAAC;GAEW,SAAS,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;AC1CoB;AACD;AAEY;AACM;AAES;AAMpE,IAAa,KAAK;IAId,eAAoB,QAAkB,EAAS,SAAoB,EAAS,YAA0B,EAAS,GAAgB;QAA3G,aAAQ,GAAR,QAAQ,CAAU;QAAS,cAAS,GAAT,SAAS,CAAW;QAAS,iBAAY,GAAZ,YAAY,CAAc;QAAS,QAAG,GAAH,GAAG,CAAa;QAFxH,aAAQ,GAAQ,UAAU,CAAC;QAG/B,QAAQ,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC;YAC1B,gEAAgE;YAChE,iEAAiE;YACjE,SAAS,CAAC,YAAY,EAAE,CAAC;YACzB,YAAY,CAAC,IAAI,EAAE,CAAC;YAEpB,qCAAqC;YAC5B,oDAAoD;YAC7D,GAAG,CAAC,WAAW,EAAE,CAAC;YACT,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,2EAAW,CAAC,QAAQ,CAAC,2CAA2C,CAAC,CAAC;YACxF,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,2EAAW,CAAC,QAAQ,CAAC,2CAA2C,CAAC,CAAC;YACxF,GAAG,CAAC,SAAS,CAAC,QAAQ,GAAG,2EAAW,CAAC,QAAQ,CAAC,8CAA8C,CAAC,CAAC;QACrG,CAAC,CAAC,CAAC;IACL,CAAC;IACJ,YAAC;AAAD,CAAC;AAnBY,KAAK;IAJjB,wEAAS,CAAC;OACe;KACzB,CAAC;UAMiI;AAelI;SAnBY,KAAK,2B;;;;;;;;;;;;;;;;;;;;;;ACZlB;AAAA;AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEH,kBAAkB;AACyB;AACI;AACgB;AACtB;AAEzC,eAAe;AAC8B;AACP;AACP;AAE/B;;;;GAIG;AACH,IAAY,OA6BX;AA7BD,WAAY,OAAO;IAEf;;;;;OAKG;IACH,yCAAM;IAEN;;;;;;;OAOG;IACH,iDAAU;IAEV;;;;;;;OAOG;IACH,qCAAI;AACR,CAAC,EA7BW,OAAO,KAAP,OAAO,QA6BlB;AAED;;;;;GAKG;AACH,IAAY,OAaX;AAbD,WAAY,OAAO;IAEf;;;OAGG;IACH,qCAAI;IAEJ;;;OAGG;IACH,uCAAK;AACT,CAAC,EAbW,OAAO,KAAP,OAAO,QAalB;AAED;;;;GAIG;AACH;IAoBI;;;;;OAKG;IACH,mBAAa,QAAgB,EAAE,IAAa,EAAE,IAAU;QACpD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACI,0BAAM,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED;;;OAGG;IACI,2BAAO,GAAd;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;;OAIG;IACI,2BAAO,GAAd;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;;;;;OAOG;IACW,gBAAM,GAApB,UAAsB,QAAgB,EAAE,IAAa,EAAE,IAAuB;QAAvB,kCAAiB,IAAI,EAAE;QAC1E,MAAM,CAAC,IAAI,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC/C,CAAC;IACL,gBAAC;AAAD,CAAC;;AAED;;GAEG;AACH;IAiBI;;;;OAIG;IACH,mBAAa,QAAqC,EAAE,MAA0B;QAC1E,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;IAC3B,CAAC;IAED;;;;OAIG;IACI,0BAAM,GAAb,UAAe,GAAgB;QAC3B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;IAC3C,CAAC;IAED;;;OAGG;IACI,6BAAS,GAAhB;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC,CAAC;YACtB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;QAED,MAAM,IAAI,cAAc,CAAC,4HAA4H,CAAC,CAAC;IAC3J,CAAC;IAED;;;;;OAKG;IACW,gBAAM,GAApB,UAAsB,QAAqC,EAAE,MAA2B;QACpF,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC;YAAC,MAAM,GAAG,IAAI,CAAC;QAC3B,MAAM,CAAC,IAAI,SAAS,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC3C,CAAC;IACL,gBAAC;AAAD,CAAC;;AAED;;GAEG;AACH;IAkBI;;;;OAIG;IACH,qBAAa,IAAY,EAAE,QAAgB;QAhB3C;;;WAGG;QACE,QAAG,GAAW,EAAE,CAAC;QAalB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED;;;OAGG;IACI,4BAAM,GAAb,UAAe,GAAW;QACtB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;IACnB,CAAC;IAED;;;OAGG;IACI,4BAAM,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;IAChC,CAAC;IAED;;;OAGG;IACI,6BAAO,GAAd;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAED;;;OAGG;IACI,iCAAW,GAAlB;QACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACzB,CAAC;IAED;;;OAGG;IACI,iCAAW,GAAlB,UAAoB,QAAgB;QAChC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;IAC7B,CAAC;IAED;;;;;OAKG;IACW,oBAAQ,GAAtB,UAAwB,IAAY,EAAE,QAAiB;QACnD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;YAAC,QAAQ,GAAG,EAAE,CAAC;QAC7B,MAAM,CAAC,IAAI,WAAW,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC3C,CAAC;IACL,kBAAC;AAAD,CAAC;;AAED;;GAEG;AAEH,IAAa,WAAW;IA0PvB,qBAAqB,IAAU,EAAU,OAAgB,EAAU,SAA0B,EAAU,MAAc;QAAhG,SAAI,GAAJ,IAAI,CAAM;QAAU,YAAO,GAAP,OAAO,CAAS;QAAU,cAAS,GAAT,SAAS,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAxPlH;;;WAGG;QACC,cAAS,GAAmB,EAAE,CAAC;QAOnC;;;WAGG;QACE,kBAAa,GAAY,KAAK,CAAC;QAEpC;;;WAGG;QACE,YAAO,GAAW,iCAAiC,CAAC;QAEzD;;;WAGG;QACE,WAAM,GAAW,QAAQ,CAAC;QAE/B;;;WAGG;QACE,aAAQ,GAAW,IAAI,CAAC;QAE7B;;;WAGG;QACE,WAAM,GAAW,CAAC,CAAC;QAExB;;;WAGG;QACE,UAAK,GAAW,IAAI,CAAC;QAE1B;;;WAGG;QACE,UAAK,GAAY,IAAI,CAAC;QAE3B;;;WAGG;QACE,UAAK,GAAY,KAAK,CAAC;QAgM9B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,OAAO,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC1C,CAAC;IACF,CAAC;IAjMD;;;;OAIG;IACI,iCAAW,GAAlB;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACjB,OAAO,CAAC,IAAI,CAAC,kCAAkC,CAAC,CAAC;YACjD,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAC1B,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,OAAO,CAAC,IAAI,CAAC,4DAA4D,CAAC,CAAC;YAC3E,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;IACH,CAAC;IAED;;;;OAIG;IACI,iCAAW,GAAlB;QACC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;YAClB,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;IACF,CAAC;IAED;;;OAGG;IACI,kCAAY,GAAnB;QACC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;IACF,CAAC;IAED;;;OAGG;IACI,gCAAU,GAAjB;QACC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAED;;;;;OAKG;IACI,gCAAU,GAAjB,UAAmB,OAAe;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAChB,OAAO,CAAC,IAAI,CAAC,8DAA8D,CAAC,CAAC;YAC9E,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,OAAO,CAAC,IAAI,CAAC,wCAAwC,CAAC,CAAC;YACxD,CAAC;QACF,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;IACF,CAAC;IAED;;;OAGG;IACI,gCAAU,GAAjB;QACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACrB,CAAC;IAED;;;;;OAKG;IACI,+BAAS,GAAhB,UAAkB,MAAc;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAChB,OAAO,CAAC,IAAI,CAAC,8DAA8D,CAAC,CAAC;YAC9E,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,OAAO,CAAC,IAAI,CAAC,sCAAsC,CAAC,CAAC;YACtD,CAAC;QACF,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;IACF,CAAC;IAED;;;OAGG;IACI,+BAAS,GAAhB;QACC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;IAED;;;;;OAKG;IACI,iCAAW,GAAlB,UAAoB,QAAgB;QACnC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAChB,OAAO,CAAC,IAAI,CAAC,8DAA8D,CAAC,CAAC;YAC9E,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,OAAO,CAAC,IAAI,CAAC,mCAAmC,CAAC,CAAC;YACnD,CAAC;QACF,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;IACF,CAAC;IAED;;;OAGG;IACI,iCAAW,GAAlB;QACC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;IACtB,CAAC;IAED;;;;;OAKG;IACI,+BAAS,GAAhB,UAAkB,MAAc;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,OAAO,CAAC,IAAI,CAAC,iCAAiC,CAAC,CAAC;QACjD,CAAC;QAED,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IAED;;;OAGG;IACI,+BAAS,GAAhB;QACC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;IAED;;;;;OAKG;IACI,8BAAQ,GAAf,UAAiB,KAAa;QAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,OAAO,CAAC,IAAI,CAAC,gCAAgC,CAAC,CAAC;QAChD,CAAC;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,MAAM,CAAC,IAAI,CAAC;IACb,CAAC;IAED;;;OAGG;IACI,8BAAQ,GAAf;QACC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;IACnB,CAAC;IAQE;;;;;;OAMG;IACC,yBAAG,GAAV,UAAY,GAAgC,EAAE,GAAuB,EAAE,IAAc;QAArF,iBA2CC;QA1CA,8CAA8C;QAC9C,IAAI,QAAQ,CAAC;QACb,IAAI,IAAI,CAAC;QAET,EAAE,CAAC,CAAC,CAAC,aAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAChB,OAAO,CAAC,IAAI,CAAC,0CAA0C,CAAC,CAAC;YAC1D,CAAC;YAED,gCAAgC;YAChC,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAChB,OAAO,CAAC,IAAI,CAAC,4CAA4C,CAAC,CAAC;YAC5D,CAAC;YAED,QAAQ,GAAG,GAAG,CAAC;QAChB,CAAC;QAED,8BAA8B;QAC9B,EAAE,CAAC,CAAC,CAAC,aAAW,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACvB,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,GAAG,GAAG,CAAC;QACZ,CAAC;QAED,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAClC,yBAAyB;YACzB,KAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,gBAAM;gBACpD,wBAAwB;gBACxB,IAAI,MAAM,GAAG,EAAE,CAAC;gBAChB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;oBAC1C,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;oBAClC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;gBACjD,CAAC;gBAED,OAAO,CAAC,MAAM,CAAC,CAAC;YACjB,CAAC,EAAE,eAAK;gBACP,wCAAwC;gBACxC,MAAM,CAAC,KAAK,CAAC,CAAC;YACf,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;;;OAIG;IACY,mBAAO,GAAtB,UAAwB,IAAiB;QACxC,wDAAwD;QACxD,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,gBAAgB,CAAC;IAClE,CAAC;IAED;;;;;OAKG;IACK,qCAAe,GAAvB,UAAyB,QAAuB,EAAE,GAA2B;QAA3B,8BAA2B;QAC5E,IAAI,MAAM,GAAsB,EAAE,CAAC;QAEnC,iCAAiC;QACjC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;QAC3F,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,OAAO,CAAC,IAAI,CAAC,sBAAsB,GAAG,QAAQ,CAAC,MAAM,GAAG,yCAAyC,CAAC,CAAC;QACpG,CAAC;QAED,wDAAwD;QACxD,MAAM,CAAC,2DAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAED;;;;;;OAMG;IACK,+BAAS,GAAjB,UAAmB,GAAgB,EAAE,GAAgB;QAAhB,8BAAgB;QACpD,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,OAAO,CAAC,IAAI,CAAC,0BAA0B,GAAG,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;QAC/D,CAAC;QAED,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC;IAC3B,CAAC;IAED;;;;;;;OAOG;IACK,6BAAO,GAAf,UAAiB,GAAW,EAAE,QAAgB,EAAE,MAAkB;QAAlE,iBAoFC;QApF+C,mCAAkB;QACjE,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAClC,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAChB,OAAO,CAAC,IAAI,CAAC,gCAAgC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YAC5D,CAAC;YAED,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,eAAK;gBAC5B,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;oBAC1G,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBAChB,OAAO,CAAC,IAAI,CAAC,oCAAoC,GAAI,GAAG,GAAG,SAAS,CAAC,CAAC;oBACvE,CAAC;oBAED,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,aAAW,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,gBAAM;wBAC3D,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;4BAChB,OAAO,CAAC,IAAI,CAAC,uBAAuB,GAAG,GAAG,GAAG,cAAc,CAAC,CAAC;wBAC9D,CAAC;wBAED,yBAAyB;wBACzB,KAAI,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;wBAC7B,OAAO,CAAC,MAAM,CAAC,CAAC;oBACjB,CAAC,EAAE,eAAK;wBACP,gCAAgC;wBAChC,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;4BAChB,OAAO,CAAC,IAAI,CAAC,uBAAuB,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC;wBAC1D,CAAC;wBAED,EAAE,CAAC,CAAC,MAAM,GAAG,CAAC,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;4BAChC,UAAU,CAAC;gCACV,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAM;oCACpD,2CAA2C;oCAC3C,KAAI,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;oCAC7B,OAAO,CAAC,MAAM,CAAC,CAAC;gCACjB,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;oCACb,+BAA+B;oCAC/B,MAAM,CAAC,KAAK,CAAC,CAAC;gCACf,CAAC,CAAC,CAAC;4BACJ,CAAC,EAAE,KAAI,CAAC,KAAK,CAAC,CAAC;wBAChB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACP,wBAAwB;4BACxB,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gCACzB,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;gCAC1B,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,YAAY,EAAE,CAAC;gCAEjC,KAAI,CAAC,KAAK,CAAC,YAAY,CAAC,UAAC,IAAI,EAAE,IAAI;oCAClC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;oCAEjD,+BAA+B;oCAC/B,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gCAC5B,CAAC,CAAC,CAAC;gCAEH,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;4BACtB,CAAC;4BAED,KAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAe,EAAE,UAAC,IAAI,EAAE,IAAI;gCACjD,EAAE,CAAC,CAAC,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC;oCACrB,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,gBAAM;wCACtC,KAAI,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;wCAC7B,OAAO,CAAC,MAAM,CAAC,CAAC;oCACjB,CAAC,CAAC,CAAC,KAAK,CAAC,eAAK;wCACb,MAAM,CAAC,KAAK,CAAC,CAAC;oCACf,CAAC,CAAC,CAAC;gCACJ,CAAC;gCAAC,IAAI,CAAC,CAAC;oCACP,MAAM,CAAC,KAAK,CAAC,CAAC;gCACf,CAAC;gCAED,KAAI,CAAC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;4BAC1C,CAAC,CAAC,CAAC;wBACJ,CAAC;oBACF,CAAC,CAAC,CAAC;gBACJ,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACP,EAAE,CAAC,CAAC,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC;wBAChB,OAAO,CAAC,IAAI,CAAC,iCAAiC,GAAG,GAAG,GAAG,SAAS,CAAC,CAAC;oBACnE,CAAC;oBAED,IAAI,CAAC;wBACJ,+BAA+B;wBAC/B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;oBAClC,CAAC;oBAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;wBAChB,6BAA6B;wBAC7B,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;oBACtB,CAAC;gBACF,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACY,mBAAO,GAAtB,UAAwB,GAAa;QACpC,IAAI,CAAC;YACJ,+BAA+B;YAC/B,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC;QAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,6BAA6B;YAC7B,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;QACnB,CAAC;IACF,CAAC;IAEE;;;OAGG;IACE,kCAAY,GAApB;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAC5B,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,QAAQ;YAClB,eAAe,EAAE,IAAI;YACrB,eAAe,EAAE,IAAI,CAAC,MAAM;YAC5B,mBAAmB,EAAE,IAAI;SACzB,CAAC,CAAC;IACJ,CAAC;IAEE;;;;;;OAMG;IACS,gBAAI,GAAnB,UAAqB,GAAW;QAC/B,oBAAoB;QACpB,IAAI,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC;QAEnB,EAAE,CAAC,CAAC,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YACpC,qBAAqB;YACrB,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,gCAAgC;YACvB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAClC,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,mBAAmB;gBAC7C,IAAI,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,oBAAoB;gBACxD,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,2BAA2B;YACnD,CAAC;QACX,CAAC;QAED,8BAA8B;QAC9B,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;IACxB,CAAC;IAED;;;;;OAKG;IACK,gCAAU,GAAlB,UAAoB,MAAc,EAAE,GAAW;QAC9C,yCAAyC;QACzC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAChB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC;QAC1G,CAAC;IACF,CAAC;IAED;;;;OAIG;IACW,8BAAQ,GAAtB,UAAwB,GAAW;;;;;6BAC9B,IAAI,CAAC,KAAK,EAAV,wBAAU;wBAEN,qBAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;oBADpD,oCAAoC;oBACpC,sBAAO,SAA6C,EAAC;4BAG9C,qBAAM,IAAI,OAAO,CAAC,UAAC,OAAO;4BAChC,OAAO,CAAC,IAAI,CAAC,CAAC;wBACf,CAAC,CAAC;;oBAHF,gDAAgD;oBAChD,sBAAO,SAEL,EAAC;;;;KAEJ;IACF,kBAAC;AAAD,CAAC;AAxhBY,WAAW;IADvB,yEAAU,EAAE;qCA2Pe,2DAAI,EAAmB,+DAAO,EAAqB,sEAAe,EAAkB,6DAAM;GA1PzG,WAAW,CAwhBvB;AAxhBuB","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 107;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 107\n// module chunks = 4","var map = {\n\t\"../pages/about/about.module\": [\n\t\t268,\n\t\t3\n\t],\n\t\"../pages/contact/contact.module\": [\n\t\t269,\n\t\t2\n\t],\n\t\"../pages/home/home.module\": [\n\t\t270,\n\t\t1\n\t],\n\t\"../pages/tabs/tabs.module\": [\n\t\t271,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 151;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 151\n// module chunks = 4","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { HttpModule } from '@angular/http';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { ApiProvider } from \"../providers/api.service\";\nimport { IonicStorageModule } from \"@ionic/storage\";\n\n@NgModule({\n    declarations: [\n      \tMyApp\n    ],\n    imports: [\n\t\tBrowserModule,\n\t\tHttpModule,\n        IonicStorageModule.forRoot(),\n      \tIonicModule.forRoot(MyApp, {}, \n{\n  links: [\n    { loadChildren: '../pages/about/about.module#AboutPageModule', name: 'AboutPage', segment: 'about', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/contact/contact.module#ContactPageModule', name: 'ContactPage', segment: 'contact', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/home/home.module#HomePageModule', name: 'HomePage', segment: 'home', priority: 'low', defaultHistory: [] },\n    { loadChildren: '../pages/tabs/tabs.module#TabsPageModule', name: 'TabsPage', segment: 'tabs', priority: 'low', defaultHistory: [] }\n  ]\n})\n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [\n    \tMyApp\n    ],\n    providers: [\n      \tStatusBar,\n      \tSplashScreen,\n\t\t{provide: ErrorHandler, useClass: IonicErrorHandler},\n        ApiProvider\n    ]\n})\n\nexport class AppModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from \"@angular/core\";\r\nimport { Platform } from \"ionic-angular\";\r\n\r\nimport { StatusBar } from \"@ionic-native/status-bar\";\r\nimport { SplashScreen } from \"@ionic-native/splash-screen\";\r\n\r\nimport { ApiEndpoint, ApiProvider } from \"../providers/api.service\";\r\n\r\n@Component({\r\n  \ttemplateUrl: \"app.html\"\r\n})\r\n\r\nexport class MyApp {\r\n\r\n    public rootPage: any = \"TabsPage\";\r\n\r\n    constructor (public platform: Platform, public statusBar: StatusBar, public splashScreen: SplashScreen, public api: ApiProvider) {\r\n      \tplatform.ready().then(() => {\r\n\t\t\t// Okay, so the platform is ready and our plugins are available.\r\n\t\t\t// Here you can do any higher level native things you might need.\r\n\t\t\tstatusBar.styleDefault();\r\n\t\t\tsplashScreen.hide();\r\n\r\n\t\t\t// Settings for api.service provider.\r\n            // Declaring endpoints and customizing messages etc.\r\n\t\t\tapi.enableDebug();\r\n            api.endpoints.POSTS = ApiEndpoint.endpoint(\"http://jsonplaceholder.typicode.com/posts\");\r\n            api.endpoints.USERS = ApiEndpoint.endpoint(\"http://jsonplaceholder.typicode.com/users\");\r\n            api.endpoints.COMMENTS = ApiEndpoint.endpoint(\"http://jsonplaceholder.typicode.com/comments\");\r\n    \t});\r\n  \t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","/*\r\n * Copyright 2018 Stephan Strate\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// general imports\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Http, Response } from \"@angular/http\";\r\nimport { ToastController, Events, Toast } from \"ionic-angular\";\r\nimport { Storage } from \"@ionic/storage\";\r\n\r\n// rxjs imports\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport \"rxjs/add/observable/forkJoin\";\r\nimport \"rxjs/add/operator/map\";\r\n\r\n/**\r\n * Set of api request modes, that have a slightly\r\n * different behaviour. They are optional for every\r\n * ApiProvider request. Default mode is DIRECT.\r\n */\r\nexport enum ApiMode {\r\n\r\n    /**\r\n     * Default Mode. Requests that fail and are\r\n     * still cached will be fetched from cache.\r\n     * Successful requests will be shipped. Error\r\n     * message will be shown, when request fails.\r\n     */\r\n    DIRECT,\r\n\r\n    /**\r\n     * Requests that are cached will be shipped\r\n     * instantly. When data is out of lifetime, new data will\r\n     * be fetched from endpoint and stored in cached.\r\n     * When request fails, no error message will be shown.\r\n     * When no data is cached for this request,\r\n     * a default DIRECT request will be executed.\r\n     */\r\n    BACKGROUND,\r\n\r\n    /**\r\n     * Requests that are cached will be shipped\r\n     * instantly. When data is out of lifetime, new data will\r\n     * be fetched from endpoint and shipped too.\r\n     * When request fails, no error message will be shown.\r\n     * When no data is cached for this request,\r\n     * a default DIRECT request will be executed.\r\n     */\r\n    FAST\r\n}\r\n\r\n/**\r\n * ApiType describes an ApiObject origin.\r\n * When the ApiObject was fetched from cache it\r\n * has type CACHE, when it is fetched from remote\r\n * service, it is LIVE.\r\n */\r\nexport enum ApiType {\r\n\r\n    /**\r\n     * When an ApiObject was fetched from\r\n     * remote service.\r\n     */\r\n    LIVE,\r\n\r\n    /**\r\n     * When an ApiObject was fetched from\r\n     * cache.\r\n     */\r\n    CACHE\r\n}\r\n\r\n/**\r\n * More or less the result of an api request.\r\n * It describes the result, from where and when it was\r\n * fetched, and of course the response itself.\r\n */\r\nexport class ApiObject {\r\n\r\n    /**\r\n     * Raw response from cache/remote service.\r\n     * More or less the pure result from request.\r\n     */\r\n    private response: string;\r\n\r\n    /**\r\n     * Describes from where the content was fetched.\r\n     * Whether from LIVE or from CACHE.\r\n     */\r\n    private type: ApiType;\r\n\r\n    /**\r\n     * Shows when the content was fetched from the\r\n     * remote service.\r\n     */\r\n    private date: Date;\r\n\r\n    /**\r\n     * Constructor.\r\n     * @param {string} response     raw response from cache/remote service\r\n     * @param {ApiType} type        from where was response fetched\r\n     * @param {Date} date           when was it fetched from remote service\r\n     */\r\n    constructor (response: string, type: ApiType, date: Date) {\r\n        this.response = response;\r\n        this.type = type;\r\n        this.date = date;\r\n    }\r\n\r\n    /**\r\n     * Returns the raw response. Might be decoded\r\n     * to json already.\r\n     * @returns {string}    json decoded response\r\n     */\r\n    public unwrap () : string {\r\n        return this.response;\r\n    }\r\n\r\n    /**\r\n     * Returns the type, from where content was fetched.\r\n     * @returns {ApiType}   from where was response fetched\r\n     */\r\n    public getType () : ApiType {\r\n        return this.type;\r\n    }\r\n\r\n    /**\r\n     * Returns the date, when the data was fetched from\r\n     * remote service.\r\n     * @returns {Date}  when was it fetched from remote service\r\n     */\r\n    public getDate () : Date {\r\n        return this.date;\r\n    }\r\n\r\n    /**\r\n     * Creating a new ApiObject. Possibility to create the object\r\n     * with the current date or with a defined date.\r\n     * @param {string} response     raw response from cache/remote service\r\n     * @param {ApiType} type        from where was response fetched\r\n     * @param {Date} date           when was it fetched from remote service\r\n     * @returns {ApiObject}         object that contains all data from a request\r\n     */\r\n    public static create (response: string, type: ApiType, date: Date = new Date()) : ApiObject {\r\n        return new ApiObject(response, type, date);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class ApiResult {\r\n\r\n    /**\r\n     *\r\n     */\r\n    private response: Map<ApiEndpoint, ApiObject>;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private date: Date;\r\n\r\n    /**\r\n     *\r\n     */\r\n    private update: Promise<object>;\r\n\r\n    /**\r\n     *\r\n     * @param {Map<ApiEndpoint, ApiObject>} response\r\n     * @param {Promise<ApiResult>} update\r\n     */\r\n    constructor (response: Map<ApiEndpoint, ApiObject>, update: Promise<ApiResult>) {\r\n        this.response = response;\r\n        this.update = update;\r\n        this.date = new Date();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {ApiEndpoint} key\r\n     * @returns {string}\r\n     */\r\n    public unwrap (key: ApiEndpoint) : string {\r\n        return this.response.get(key).unwrap();\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Promise<ApiResult>}\r\n     */\r\n    public getUpdate () : Promise<ApiResult> {\r\n        if (this.update != null) {\r\n            return this.update;\r\n        }\r\n\r\n        throw new ReferenceError(\"The use of 'getUpdate()' is not allowed with the current ApiMode. The ApiMode FAST provides an update object, for example.\");\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Map<ApiEndpoint, ApiObject>} response\r\n     * @param {Promise<ApiResult>} update\r\n     * @returns {ApiResult}\r\n     */\r\n    public static create (response: Map<ApiEndpoint, ApiObject>, update?: Promise<ApiResult>) : ApiResult {\r\n        if (!update) update = null;\r\n        return new ApiResult(response, update);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\nexport class ApiEndpoint {\r\n\r\n    /**\r\n     *\r\n     */\r\n    private base: string;\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n\tprivate opt: string = \"\";\r\n\r\n    /**\r\n     *\r\n     */\r\n    private lifetime: number;\r\n\r\n    /**\r\n     *\r\n     * @param {string} base\r\n     * @param {number} lifetime\r\n     */\r\n    constructor (base: string, lifetime: number) {\r\n        this.base = base;\r\n        this.lifetime = lifetime;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} opt\r\n     */\r\n    public modify (opt: string) : void {\r\n        this.opt = opt;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public getUrl () : string {\r\n        return this.base + this.opt;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    public getBase () : string {\r\n        return this.base;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {number}\r\n     */\r\n    public getLifetime () : number {\r\n        return this.lifetime;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {number} lifetime\r\n     */\r\n    public setLifetime (lifetime: number) : void {\r\n        this.lifetime = lifetime;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {string} base\r\n     * @param {number} lifetime\r\n     * @returns {ApiEndpoint}\r\n     */\r\n    public static endpoint (base: string, lifetime?: number) : ApiEndpoint {\r\n        if (!lifetime) lifetime = 24;\r\n        return new ApiEndpoint(base, lifetime);\r\n    }\r\n}\r\n\r\n/**\r\n *\r\n */\r\n@Injectable()\r\nexport class ApiProvider {\r\n\r\n    /**\r\n\t *\r\n     * @type {ModifiedObject}\r\n     */\r\n\tpublic endpoints: ModifiedObject = {};\r\n\r\n    /**\r\n     *\r\n     */\r\n\tprivate error: any;\r\n\r\n    /**\r\n     *\r\n     * @type {boolean}\r\n     */\r\n\tprivate errorInstance: boolean = false;\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n\tprivate message: string = \"Check your internet connection.\";\r\n\r\n    /**\r\n     *\r\n     * @type {string}\r\n     */\r\n\tprivate button: string = \"Reload\";\r\n\r\n    /**\r\n     *\r\n     * @type {number}\r\n     */\r\n\tprivate duration: number = 3000;\r\n\r\n    /**\r\n     *\r\n     * @type {number}\r\n     */\r\n\tprivate repeat: number = 3;\r\n\r\n    /**\r\n     *\r\n     * @type {number}\r\n     */\r\n\tprivate delay: number = 1000;\r\n\r\n    /**\r\n     *\r\n     * @type {boolean}\r\n     */\r\n\tprivate cache: boolean = true;\r\n\r\n    /**\r\n     *\r\n     * @type {boolean}\r\n     */\r\n\tprivate debug: boolean = false;\r\n\r\n\t/**\r\n\t * Enables debug mode. Debug mode does not need to be\r\n\t * disabled, it is disabled by default.\r\n\t * @return {boolean}\twhether debug got enabled or not\r\n\t */\r\n\tpublic enableDebug () : boolean {\r\n\t\t if (!this.debug) {\r\n\t\t\t console.info(\"Api Service: Debug mode enabled.\");\r\n\t\t\t return this.debug = true;\r\n\t\t } else {\r\n\t\t\t console.warn(\"Api Service: Debug mode can not be enabled multiple times.\");\r\n\t\t\t return false;\r\n\t\t }\r\n\t}\r\n\r\n\t/**\r\n\t * Enables cache. Cache does not need to be enabled,\r\n\t * it is enabled by default.\r\n\t * @return {boolean}\twhether cache could be enabled or not\r\n\t */\r\n\tpublic enableCache () : boolean {\r\n\t\tif (this.cache) {\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\tthis.cache = true;\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Disables cache. Cache is enabled by default.\r\n\t * @return {boolean}\twhether cache could be disabled or not\r\n\t */\r\n\tpublic disableCache () : boolean {\r\n\t\tif (this.cache) {\r\n\t\t\tthis.cache = false;\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the set cache status.\r\n\t * @return {boolean}\tcache status\r\n\t */\r\n\tpublic checkCache () : boolean {\r\n\t\treturn this.cache;\r\n\t}\r\n\r\n\t/**\r\n\t * You can customize your error message by passing\r\n\t * a message to this function.\r\n\t * @param message {string}\tmessage that is diplayed if request fails\r\n\t * @return {boolean}\tstatus, if the change worked\r\n\t */\r\n\tpublic setMessage (message: string) : boolean {\r\n\t\tif (this.debug) {\r\n\t\t\tif (this.error) {\r\n\t\t\t\tconsole.warn(\"Api Service: You can not change the toast, while its active.\");\r\n\t\t\t} else {\r\n\t\t\t\tconsole.info(\"Api Service: Custom error message set.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this.error) {\r\n\t\t\tthis.message = message;\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the set error message.\r\n\t * @return {string}\tthe error message thats valid in this moment\r\n\t */\r\n\tpublic getMessage () : string {\r\n\t\treturn this.message;\r\n\t}\r\n\r\n\t/**\r\n\t * You can customize your button text by passing\r\n\t * a message to this function.\r\n\t * @param button {string}\tmessage that is displayed to reload\r\n\t * @return {boolean}\tstatus, if the change worked\r\n\t */\r\n\tpublic setButton (button: string) : boolean {\r\n\t\tif (this.debug) {\r\n\t\t\tif (this.error) {\r\n\t\t\t\tconsole.warn(\"Api Service: You can not change the toast, while its active.\");\r\n\t\t\t} else {\r\n\t\t\t\tconsole.info(\"Api Service: Custom button text set.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this.error) {\r\n\t\t\tthis.button = button;\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the set button text.\r\n\t * @return {string}\tthe button text thats valid in this moment\r\n\t */\r\n\tpublic getButton () : string {\r\n\t\treturn this.button;\r\n\t}\r\n\r\n\t/**\r\n\t * You can customize the duration the error message is displayed\r\n\t * by passing a value in ms to this function.\r\n\t * @param duration {number}\r\n\t * @return void\r\n\t */\r\n\tpublic setDuration (duration: number) : boolean {\r\n\t\tif (this.debug) {\r\n\t\t\tif (this.error) {\r\n\t\t\t\tconsole.warn(\"Api Service: You can not change the toast, while its active.\");\r\n\t\t\t} else {\r\n\t\t\t\tconsole.info(\"Api Service: Custom duration set.\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!this.error) {\r\n\t\t\tthis.duration = duration;\r\n\t\t\treturn true;\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the set duration.\r\n\t * @return {number}\tthe duration thats valid in this moment\r\n\t */\r\n\tpublic getDuration () : number {\r\n\t\treturn this.duration;\r\n\t}\r\n\r\n\t/**\r\n\t * You can customize the times a request gets repeated before\r\n\t * its being rejected by passing a value to this function.\r\n\t * @param repeat \r\n\t * @return {boolean}\tfeedback if repeat is set\r\n\t */\r\n\tpublic setRepeat (repeat: number) : boolean {\r\n\t\tif (this.debug) {\r\n\t\t\tconsole.info(\"Api Service: Custom repeat set.\");\r\n\t\t}\r\n\r\n\t\tthis.repeat = repeat;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the set repeat.\r\n\t * @return {number}\r\n\t */\r\n\tpublic getRepeat () : number {\r\n\t\treturn this.repeat;\r\n\t}\r\n\r\n\t/**\r\n\t * You can customize the delay between the requests by passing\r\n\t * a value in ms to this function.\r\n\t * @param delay \r\n\t * @return {boolean}\tfeedback if delay is set\r\n\t */\r\n\tpublic setDelay (delay: number) : boolean {\r\n\t\tif (this.debug) {\r\n\t\t\tconsole.info(\"Api Service: Custom delay set.\");\r\n\t\t}\r\n\r\n\t\tthis.delay = delay;\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the set delay.\r\n\t * @return {number}\r\n\t */\r\n\tpublic getDelay () : number {\r\n\t\treturn this.delay;\r\n\t}\r\n\r\n\tconstructor (private http: Http, private storage: Storage, private toastCtrl: ToastController, private events: Events) {\r\n\t\tif (this.debug) {\r\n\t\t\tconsole.debug(\"ApiService initialized.\");\r\n\t\t}\r\n\t}\r\n\r\n    /**\r\n     *\r\n     * @param {ApiEndpoint | ApiEndpoint[]} api\r\n     * @param {string | string[]} opt\r\n     * @param {ApiMode} mode\r\n     * @returns {Promise<object>}\r\n     */\r\n\tpublic get (api: ApiEndpoint | ApiEndpoint[], opt?: string | string[], mode?: ApiMode) : Promise<object> {\r\n\t\t// mapping all parameters to a readable format\r\n\t\tlet requests;\r\n\t\tlet opts;\r\n\r\n\t\tif (!ApiProvider.isArray(api)) {\r\n\t\t\tif (this.debug) {\r\n\t\t\t\tconsole.info(\"Api Service: Single request initialized.\");\r\n\t\t\t}\r\n\r\n\t\t\t// building array of api request\r\n\t\t\trequests = [].concat(api);\r\n\t\t} else {\r\n\t\t\tif (this.debug) {\r\n\t\t\t\tconsole.info(\"Api Service: Multiple request initialized.\");\r\n\t\t\t}\r\n\r\n\t\t\trequests = api;\r\n\t\t}\r\n\r\n\t\t// mapping parameters to array\r\n\t\tif (!ApiProvider.isArray(opt)) {\r\n\t\t\topts = [].concat(opt);\r\n\t\t} else {\r\n\t\t\topts = opt;\r\n\t\t}\r\n\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t// start all api requests\r\n\t\t\tthis.multiplePromise(requests, opts).subscribe(result => {\r\n\t\t\t\t// map result for return\r\n\t\t\t\tlet values = [];\r\n\t\t\t\tfor (let i = 0; i < requests.length; i++) {\r\n\t\t\t\t\tlet temp = opts[i] ? opts[i] : '';\r\n\t\t\t\t\tvalues[requests[i].getUrl() + temp] = result[i];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresolve(values);\r\n\t\t\t}, error => {\r\n\t\t\t\t// one or more requests failed somewhere\r\n\t\t\t\treject(error);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * You can test an object if it is an array or not.\r\n\t * @param test {object | object[]}\tarray or object to test\r\n\t * @return {boolean}\twhether the object is an array or not\r\n\t */\r\n\tprivate static isArray (test: any | any[]) : boolean {\r\n\t\t// most common strategy to check if it's an array or not\r\n\t\treturn Object.prototype.toString.call(test) === '[object Array]';\r\n\t}\r\n\r\n\t/**\r\n\t * Forking all requests together and make them subscribable.\r\n\t * @param requests {ApiEndpoint[]}\tapi objects @see API\r\n\t * @param opt {string | string[]}\toptional parameters to endpoints\r\n\t * @return {Observable<string[]>}\tall requests together\r\n\t */\r\n\tprivate multiplePromise (requests: ApiEndpoint[], opt: string | string[] = []) : Observable<string[]> {\r\n\t\tlet result: Promise<string>[] = [];\r\n\r\n\t\t// creating array of all requests\r\n\t\tfor (let i = 0; i < requests.length; i++) {\r\n\t\t\tresult.push(this.request(this.concatUrl(requests[i], opt[i]), requests[i].getLifetime()));\r\n\t\t}\r\n\r\n\t\tif (this.debug) {\r\n\t\t\tconsole.info(\"Api Service: Forked \" + requests.length + \" requests together. Waiting for result.\");\r\n\t\t}\r\n\r\n\t\t// fork all requests together and make them subscribable\r\n\t\treturn Observable.forkJoin(result);\r\n\t}\r\n\r\n\t/**\r\n\t * Building url based on url, endpoint, api key and\r\n\t * optional parameters.\r\n\t * @param api {object}\tapi object @see API\r\n\t * @param opt {string}\toptional parameter to endpoint\r\n\t * @return {string}\t\trequest ready url\r\n\t */\r\n\tprivate concatUrl (api: ApiEndpoint, opt: string = \"\") : string {\r\n\t\tif (this.debug) {\r\n\t\t\tconsole.info(\"Api Service: Called url \" + api.getUrl() + opt);\r\n\t\t}\r\n\r\n\t\treturn api.getUrl() + opt;\r\n\t}\r\n\r\n\t/**\r\n\t * Requesting a single url, checking for cached results\r\n\t * and handle errors.\r\n\t * @param url {string}\t\t\turl to request\r\n\t * @param lifetime {number}\t\tlifetime in hours\r\n\t * @param number {number}\t\tinternal number (do not touch)\r\n\t * @return {Promise<string>}\tPromise of http request\r\n\t */\r\n\tprivate request (url: string, lifetime: number, number: number = 0) : Promise<string> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif (this.debug) {\r\n\t\t\t\tconsole.info(\"Api Service: Starting request \" + url + \".\");\r\n\t\t\t}\r\n\r\n\t\t\tthis.getCache(url).then(value => {\r\n\t\t\t\tif (value == null || (new Date().getTime() - new Date(value.timestamp).getTime()) > (lifetime * 3600000)) {\r\n\t\t\t\t\tif (this.debug) {\r\n\t\t\t\t\t\tconsole.info(\"Api Service: No cached values for \" +  url + \" found.\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.http.get(url).map(ApiProvider.extract).subscribe(result => {\r\n\t\t\t\t\t\tif (this.debug) {\r\n\t\t\t\t\t\t\tconsole.info(\"Api Service: Request \" + url + \" successful.\");\r\n\t\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t\t// case 1: normal request\r\n\t\t\t\t\t\tthis.cacheItems(result, url);\r\n\t\t\t\t\t\tresolve(result);\r\n\t\t\t\t\t}, error => {\r\n\t\t\t\t\t\t// case 2: problems with request\r\n\t\t\t\t\t\tif (this.debug) {\r\n\t\t\t\t\t\t\tconsole.warn(\"Api Service: Request \" + url + \" failed.\");\r\n\t\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t\tif (number < (this.repeat - 1)) {\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tthis.request(url, lifetime, (number + 1)).then(result => {\r\n\t\t\t\t\t\t\t\t\t// request was successful after another try\r\n\t\t\t\t\t\t\t\t\tthis.cacheItems(result, url);\r\n\t\t\t\t\t\t\t\t\tresolve(result);\r\n\t\t\t\t\t\t\t\t}).catch(error => {\r\n\t\t\t\t\t\t\t\t\t// request still not successful\r\n\t\t\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}, this.delay);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// all requests did fail\r\n\t\t\t\t\t\t\tif (!this.errorInstance) {\r\n\t\t\t\t\t\t\t\tthis.errorInstance = true;\r\n\t\t\t\t\t\t\t\tthis.error = this.errorMessage();\r\n\t\t\r\n\t\t\t\t\t\t\t\tthis.error.onDidDismiss((data, role) => {\r\n\t\t\t\t\t\t\t\t\tthis.events.publish(\"error:dismiss\", data, role);\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\t// deleting error message again\r\n\t\t\t\t\t\t\t\t\tthis.errorInstance = false;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\r\n\t\t\t\t\t\t\t\tthis.error.present();\r\n\t\t\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t\t\tthis.events.subscribe(\"error:dismiss\", (data, role) => {\r\n\t\t\t\t\t\t\t\tif (role == \"close\") {\r\n\t\t\t\t\t\t\t\t\tthis.request(url, lifetime).then(result => {\r\n\t\t\t\t\t\t\t\t\t\tthis.cacheItems(result, url);\r\n\t\t\t\t\t\t\t\t\t\tresolve(result);\r\n\t\t\t\t\t\t\t\t\t}).catch(error => {\r\n\t\t\t\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t\t\t\tthis.events.unsubscribe(\"error:dismiss\");\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.debug) {\r\n\t\t\t\t\t\tconsole.info(\"Api Service: Cached values for \" + url + \" found.\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t// trying to map result to json\r\n\t\t\t\t\t\tresolve(JSON.parse(value.value));\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t// fallback mapping to source\r\n\t\t\t\t\t\tresolve(value.value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Extracting the result out of the response.\r\n\t * It is whether json or source.\r\n\t * @param res\r\n\t * @return {string}\tresult, whether json or source\r\n\t */\r\n\tprivate static extract (res: Response) : string {\r\n\t\ttry {\r\n\t\t\t// trying to map result to json\r\n\t\t\treturn res.json();\r\n\t\t} catch (error) {\r\n\t\t\t// fallback mapping to source\r\n\t\t\treturn res.text();\r\n\t\t}\r\n\t}\r\n\r\n    /**\r\n     * Returning the controller for error message\r\n     * @returns {Toast} error message toast controller\r\n     */\r\n\tprivate errorMessage () : Toast {\r\n\t\treturn this.toastCtrl.create({\r\n\t\t\tmessage: this.message,\r\n\t\t\tduration: this.duration,\r\n\t\t\tposition: \"bottom\",\r\n\t\t\tshowCloseButton: true,\r\n\t\t\tcloseButtonText: this.button,\r\n\t\t\tdismissOnPageChange: true\r\n\t\t});\r\n\t}\r\n\r\n    /**\r\n\t * Generates a hash string out of a raw string\r\n     * input. It is used to store and access data\r\n     * from remote requests.\r\n     * @param {string} raw  raw string input to generate hash from\r\n     * @returns {string}    generated hash string\r\n     */\r\n\tprivate static hash (raw: string) : string {\r\n\t\t// declare variables\r\n\t\tlet hash = 0, char;\r\n\r\n\t\tif (raw == null || raw.length == 0) {\r\n\t\t\t// catch empty string\r\n\t\t\treturn hash.toString();\r\n\t\t} else {\r\n\t\t\t// generate hash for full string\r\n            for (let i = 0; i < raw.length; i++) {\r\n                char = raw.charCodeAt(i); // get current char\r\n                hash = ((hash << 5) - hash) + char; // extend hash value\r\n                hash = hash & hash; // convert to 32bit integer\r\n            }\r\n\t\t}\r\n\r\n\t\t// parse hash number to string\r\n\t\treturn hash.toString();\r\n\t}\r\n\r\n\t/**\r\n\t * Cache result to hashed url.\r\n\t * @param result {string}\tresult to cache\r\n\t * @param url {string}\t\turl to cache to\r\n\t * @return none\r\n\t */\r\n\tprivate cacheItems (result: string, url: string) : Promise<any> {\r\n\t\t// only use storage when cache is enabled\r\n\t\tif (this.cache) {\r\n\t\t\treturn this.storage.set(ApiProvider.hash(url), { value: JSON.stringify(result), timestamp: new Date() });\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Synchronize the storage request.\r\n\t * @param url {string}\turl to request from storage\r\n\t * @return {Promise}\tstorage element of url\r\n\t */\r\n\tprivate async getCache (url: string) : Promise<any> {\r\n\t\tif (this.cache) {\r\n\t\t\t// requesting storage when activated\r\n\t\t\treturn await this.storage.get(ApiProvider.hash(url));\r\n\t\t} else {\r\n\t\t\t// returning null promise when cache is disabled\r\n\t\t\treturn await new Promise((resolve) => {\r\n\t\t\t\tresolve(null);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n *\r\n */\r\ninterface ModifiedObject {\r\n\r\n    /**\r\n\t *\r\n     */\r\n\t[key: string]: any;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/api.service.ts"],"sourceRoot":""}